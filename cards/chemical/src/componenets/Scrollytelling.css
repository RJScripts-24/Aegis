/* src/components/Scrollytelling.css */

/* * 1. The Main Container 
 * This element's height is set by JS (e.g., 500vh) 
 * It acts as the scrollable "track" for the entire component.
 */
.scrollytelling-container {
  position: relative;
  width: 100%;
}

/* * 2. The Video Wrapper 
 * This element sticks to the viewport while the user scrolls 
 * down the main container.
 */
/* Make the video fill the viewport and stay fixed while scrolling.
   We use fixed positioning so the video always covers the screen, and
   the overlay text (which is sticky) will scroll on top of it. */
.scrollytelling-video-wrapper {
  position: fixed;
  top: 0;
  left: 0;
  height: 100vh;
  width: 100vw;
  overflow: hidden; /* Hide any video overflow */
  z-index: 0;
}

/* * 3. The Video Element
 * This scales to fill the wrapper, covering the viewport.
 */
.scrollytelling-video-wrapper .scrollytelling-video {
  width: 100%;
  height: 100%;
  object-fit: cover; /* Ensures video covers the screen without distortion */
  display: block;
  pointer-events: none; /* So the video doesn't intercept scroll/touch */
}

/* * 4. The Chapter Overlay
 * This sticks on top of the video and holds the text content.
 * Using flexbox to center the text box within it.
 */
.scrollytelling-chapter-overlay {
  position: sticky;
  top: 0;
  height: 100vh;
  width: 100%;
  /* Places the text box */
  display: flex;
  justify-content: center; /* Center the text box horizontally */
  align-items: center; /* Aligns text box vertically center */
  padding: 0 5vw; /* Adds 5% padding on the left/right */
  
  /* Ensures this is on top of the video wrapper (which is also sticky) */
  z-index: 10;
}

/* When the video is fixed we need the container to create the scrolling space */
.scrollytelling-container::before {
  content: '';
  display: block;
  height: 100vh; /* initial viewport height so first sticky positions correctly */
}

/* * 5. The Text Box
 * This is the styled box holding the title and paragraph.
 */
.chapter-text {
  background-color: rgba(0, 0, 0, 0.5); /* Slightly more transparent */
  color: white;
  padding: 24px 30px;
  border-radius: 8px;
  max-width: 600px; /* Slightly wider to accommodate content */
  box-shadow: 0 6px 18px rgba(0, 0, 0, 0.28);
  /* removed colored border for a cleaner look */
  backdrop-filter: blur(4px);
  will-change: transform, opacity;
}

.chapter-text h2 {
  margin: 0 0 10px 0;
  font-size: 2.2rem;
}

.chapter-text p {
  margin: 0;
  font-size: 1.1rem;
  line-height: 1.6;
}

/* * 6. Fade Animations
 * Controls the fade-in/out as chapters become active/inactive.
 */
.fade-in {
  opacity: 1;
  transition: opacity 0.18s ease-in;
}

.fade-out {
  opacity: 0;
  transition: opacity 0.12s ease-out;
}